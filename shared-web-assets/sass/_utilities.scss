/*!
 * Copyright 2020 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * Cross-browser antialias for transformed elements.
 */
@mixin antialias {
  padding: 1px;
  @include background-clip(content-box);
	@include backface-visibility(hidden);
}

/*
 * Given a rems size renders rems with fallback pixels.
 *
 * Basically the reverse of https://github.com/bitmanic/rem
 *
 *     @mixin rems(font-size, 2rem);
 *
 * becomes
 *
 *     font-size: 32px;
 *     font-size: 2rem;
 *
 * It also works with lists so
 *
 *    @mixin rems(padding, 1rem 0 2rem 0.5rem);
 *
 * becomes
 *
 *    padding: 16px 0 32px 8px;
 *    padding: 1rem 0 2rem 0.5rem;
 */
@mixin rem($property, $rems) {
	@if type-of($rems) == "number" {
		#{$property}: ($rems / 1rem) * $base-font-size;
	} @else {
		$px-values: ();
		@each $value in $rems {
			@if $value == 0 {
				$px-values: append($px-values, $value);
			} @else {
				$px-values: append($px-values, ($value / 1rem) * $base-font-size);
			}
		}
		#{$property}: $px-values;
	}
	#{$property}: $rems;
}

/*
 * Outputs a color property with an opaque fallback for browsers that do not support RGBA.
 */
@mixin safe-rgba($property, $color, $fallback-color: opacify($color, 1)) {
	@if opacity($color) == 1 {
		#{$property}: $color;
	} @else {
		#{$property}: $fallback-color;
		.rgba & {
			#{$property}: $color;
		}
	}
}

@function simple-image-url($image-path) {
  @return url($image-path);
}
